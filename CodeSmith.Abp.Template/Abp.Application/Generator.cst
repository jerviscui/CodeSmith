<%@ Template Language="C#" TargetLanguage="Text" Debug="True" Encoding="UTF-8" OutputType="None"  %>
<%@ Assembly Name="SchemaExplorer" Path="../../libs" %>
<%@ Assembly Name="CodeSmith.Abp"  Path="../../libs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="CodeSmith.Abp" %>
<%@ Import Namespace="CodeSmith.Abp.Extensions" %>
<%@ Import Namespace="CodeSmith.Abp.Model" %>
<%@ Import Namespace="CodeSmith.Abp.Generator" %>

<%@ Property Name="AbpCoreNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="ApplicationNamespace" Type="System.String"  Category="Namespace" Optional="False" %>

<%@ Property Name="BaseApplicationClassName" Type="System.String"  Category="ClassName" Optional="False" %>
<%@ Property Name="IBaseApplicationClassName" Type="System.String"  Category="ClassName" Optional="False" %>
<%@ Property Name="PagedResultRequestClassName" Type="System.String"  Category="ClassName" Optional="False" Default="DefaultPagedResultRequest" %>

<%@ Property Name="EnumItems"Type="System.Collections.Generic.List<EnumItem>" Category="Data" Optional="True" %>
<%@ Property Name="SoureDatabase" Type="SchemaExplorer.DatabaseSchema"  Category="Data" %>

<%@ Register Name="DtoEditableClass" Template="Abp.Application.Dto.Editable.cst" %>
<%@ Register Name="DtotGeneratedClass" Template="Abp.Application.Dto.Generated.cst" %>
<%@ Register Name="GetDtosPageEditableClass" Template="Abp.Application.GetDtosPage.Editable.cst" %>
<%@ Register Name="GetDtosPageGeneratedClass" Template="Abp.Application.GetDtosPage.Generated.cst" %>
<%@ Register Name="IServiceEditableClass" Template="Abp.Application.IService.Editable.cst" %>
<%@ Register Name="IServiceGeneratedClass" Template="Abp.Application.IService.Generated.cst" %>
<%@ Register Name="MappingEditableClass" Template="Abp.Application.Mapping.Editable.cst" %>
<%@ Register Name="MappingGeneratedClass" Template="Abp.Application.Mapping.Generated.cst" %>
<%@ Register Name="ServiceEditableClass" Template="Abp.Application.Service.Editable.cst" %>
<%@ Register Name="ServiceGeneratedClass" Template="Abp.Application.Service.Generated.cst" %>
<% Generator();%>
 
<script runat="template">

public void Generator()
{
    string rootPath = System.IO.Directory.GetCurrentDirectory();
    this.Response.WriteLine(rootPath);
    CodeSmith.Abp.Generator.Generator generator = new CodeSmith.Abp.Generator.Generator();    
    CodeSmith.Abp.Model.EntityContext context = generator.Generate(SoureDatabase);
    
    AbpGenerator.CreateMultipleEntityClass<DtotGeneratedClass,DtoEditableClass>(context,
        this,
        entity => entity.ClassName.ToPluralPascalCase()+" /Dtos/"+ entity.ClassName + "Dto.Generated.cs",
        entity => entity.ClassName.ToPluralPascalCase()+" /Dtos/"+ entity.ClassName + "Dto.cs",
        rootPath);
    
    AbpGenerator.CreateMultipleContextClass<MappingGeneratedClass,MappingEditableClass>(context,
        this,
        dbContext => "DtoMappings.Generated.cs",
        dbContext => "DtoMappings.cs",
        rootPath);
    
    AbpGenerator.CreateMultipleEntityClass<GetDtosPageGeneratedClass,GetDtosPageEditableClass>(context,
        this,
        entity => entity.ClassName.ToPluralPascalCase()+" /Dtos/Get"+ entity.ClassName.ToPluralPascalCase() + "PageInput.Generated.cs",
        entity => entity.ClassName.ToPluralPascalCase()+" /Dtos/Get"+ entity.ClassName.ToPluralPascalCase() + "PageInput.cs",
        rootPath);
    
    AbpGenerator.CreateMultipleEntityClass<IServiceGeneratedClass,IServiceEditableClass>(context,
        this,
        entity => entity.ClassName.ToPluralPascalCase()+" /I"+ entity.ClassName + "AppService.Generated.cs",
        entity => entity.ClassName.ToPluralPascalCase()+" /I"+ entity.ClassName + "AppService.cs",
        rootPath);
    
    AbpGenerator.CreateMultipleEntityClass<ServiceGeneratedClass,ServiceEditableClass>(context,
        this,
        entity => entity.ClassName.ToPluralPascalCase()+" /"+ entity.ClassName + "AppService.Generated.cs",
        entity => entity.ClassName.ToPluralPascalCase()+" /"+ entity.ClassName + "AppService.cs",
        rootPath);
}
</script>