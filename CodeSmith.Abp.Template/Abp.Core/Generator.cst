<%@ Template Language="C#" TargetLanguage="Text" Debug="True" Encoding="UTF-8" OutputType="None"  %>
<%@ Assembly Name="SchemaExplorer" Path="../../libs" %>
<%@ Assembly Name="CodeSmith.Abp"  Path="../../libs"   %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="CodeSmith.Abp" %>
<%@ Import Namespace="CodeSmith.Abp.Extensions" %>
<%@ Import Namespace="CodeSmith.Abp.Model" %>
<%@ Import Namespace="CodeSmith.Abp.Generator" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>

<%@ Property Name="AbpCoreNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="SoureDatabase" Type="SchemaExplorer.DatabaseSchema" Category="Data" Optional="False"%>
<%@ Property Name="EnumItems"Type="System.Collections.Generic.List<EnumItem>" Category="Data" Optional="True"%>
 
<%@ Register Name="EntityEditableClass" Template="Abp.Core.Entity.Editable.cst" %>
<%@ Register Name="EntityGeneratedClass" Template="Abp.Core.Entity.Generated.cst" %>
<%@ Register Name="IRepositoryEditableClass" Template="Abp.Core.IRepository.Editable.cst" %>
<%@ Register Name="IRepositoryGeneratedClass" Template="Abp.Core.IRepository.Generated.cst" %>
<% Generator();%>
 
<script runat="template">

public void Generator()
{
    string rootPath = System.IO.Directory.GetCurrentDirectory();
    CodeSmith.Abp.Generator.Generator generator = new CodeSmith.Abp.Generator.Generator();    
    CodeSmith.Abp.Model.EntityContext context = generator.Generate(SoureDatabase);
    AbpGenerator.CreateMultipleEntityClass<EntityGeneratedClass,EntityEditableClass>(context,
        this,
        entity => entity.TableName.ToPluralPascalCase() + @"\" + entity.ClassName + ".Generated.cs",
        entity => entity.TableName.ToPluralPascalCase() + @"\" + entity.ClassName + ".cs",
        rootPath);
    AbpGenerator.CreateMultipleEntityClass<IRepositoryGeneratedClass,IRepositoryEditableClass>(context,
        this,
        entity => entity.TableName.ToPluralPascalCase() + @"\I" + entity.ClassName + "Repository.Generated.cs",
        entity => entity.TableName.ToPluralPascalCase() + @"\I" + entity.ClassName + "Repository.cs",
        rootPath);
}
</script>