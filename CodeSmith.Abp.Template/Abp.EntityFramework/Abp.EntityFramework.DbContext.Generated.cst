<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>
<%@ Assembly Name="SchemaExplorer" Path="../../libs" %>
<%@ Assembly Name="CodeSmith.Abp"  Path="../../libs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="CodeSmith.Abp" %>
<%@ Import Namespace="CodeSmith.Abp.Extensions" %>
<%@ Import Namespace="CodeSmith.Abp.Model" %>
<%@ Import Namespace="CodeSmith.Abp.Generator" %>

<%@ Property Name="AbpCoreNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="MappingNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="ContextNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="DbContextClassName" Type="System.String"  Category="ClassName" Optional="False" %>
<%@ Property Name="EntityContext" Type="CodeSmith.Abp.Model.EntityContext"  Category="Data" %>
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Abp.EntityFramework;
 
namespace <%= ContextNamespace %>
{
    public partial class <%=DbContextClassName%> : AbpDbContext
    {
        /* NOTE: 
         *   Setting "Default" to base class helps us when working migration commands on Package Manager Console.
         *   But it may cause problems when working Migrate.exe of EF. If you will apply migrations on command line, do not
         *   pass connection string name to base classes. ABP works either way.
         */
        public <%= DbContextClassName %>()
            : base("Default")
        {
            InitializeContext();
        }

        /* NOTE:
         *   This constructor is used by ABP to pass connection string defined in QdCaseDataModule.PreInitialize.
         *   Notice that, actually you will not directly create an instance of QdCaseDbContext since ABP automatically handles it.
         */
        public <%= DbContextClassName %>(string nameOrConnectionString)
            : base(nameOrConnectionString)
        {
            InitializeContext();     
        }

<% foreach(var p in EntityContext.Entities) { %>
        public System.Data.Entity.DbSet<<%= AbpCoreNamespace %>.<%= p.TableName.ToPluralPascalCase() %>.<%= p.ClassName.ToSafeName() %>> <%= p.ContextName.ToSafeName() %> { get; set; }
<% } // foreach %>

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
<% foreach(var p in EntityContext.Entities) { %>
            modelBuilder.Configurations.Add(new <%= MappingNamespace %>.<%= p.MappingName.ToSafeName() %>());
<% } // foreach %>

            InitializeMapping(modelBuilder);

	    base.OnModelCreating(modelBuilder);
        }

        partial void InitializeContext();
        partial void InitializeMapping(System.Data.Entity.DbModelBuilder modelBuilder);
    }
}