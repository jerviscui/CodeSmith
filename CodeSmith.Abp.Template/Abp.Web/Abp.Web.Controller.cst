<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>
<%@ Assembly Name="SchemaExplorer" Path="../../libs" %>
<%@ Assembly Name="CodeSmith.Abp"  Path="../../libs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="CodeSmith.Abp" %>
<%@ Import Namespace="CodeSmith.Abp.Extensions" %>
<%@ Import Namespace="CodeSmith.Abp.Model" %>
<%@ Import Namespace="CodeSmith.Abp.Generator" %>

<%@ Property Name="AbpCoreNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="AbpWebNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="ApiControllerNamespace" Type="System.String"  Category="Namespace" Optional="False" %>

<%@ Property Name="ControllerNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="ApplicationNamespace" Type="System.String"  Category="Namespace" Optional="False" %>

<%@ Property Name="BaseControllerClassName" Type="System.String"  Category="ClassName" Optional="False" %>

<%@ Property Name="Entity"Type="CodeSmith.Abp.Model.Entity" Category="Data" Optional="False" %>
using System.Web.Mvc;
using Abp.Application.Services.Dto;
using <%=ApplicationNamespace %>.<%= Entity.ClassName.ToPluralPascalCase()  %>;
using <%=ApplicationNamespace %>.<%= Entity.ClassName.ToPluralPascalCase()  %>.Dtos;

namespace <%=ControllerNamespace%>
{
    public class <%= Entity.ClassName  %>Controller : <%= BaseControllerClassName %>
    {
        private readonly I<%= Entity.ClassName  %>AppService <%= Entity.ClassName.ToFieldName() %>AppService;

        public <%= Entity.ClassName  %>Controller(I<%= Entity.ClassName  %>AppService <%= Entity.ClassName.ToCamelCase() %>AppService)
        {
            <%= Entity.ClassName.ToFieldName() %>AppService = <%= Entity.ClassName.ToCamelCase() %>AppService;
        }

        /// <summary>
        /// /<%= Entity.ClassName  %>/List
        /// </summary>
        /// <returns></returns>
        public ActionResult List()
        {
            return View();
        }

        /// <summary>
        /// /<%= Entity.ClassName  %>/Edit
        /// </summary>
        /// <returns></returns>
        public ActionResult Edit(int? id)
        {
            <%= Entity.ClassName  %>Dto output = new <%= Entity.ClassName  %>Dto();
            if (id.HasValue)
                output = <%= Entity.ClassName.ToFieldName() %>AppService.Get(new IdInput<int> { Id = id.Value });
            return View(output);
        }
    }
}