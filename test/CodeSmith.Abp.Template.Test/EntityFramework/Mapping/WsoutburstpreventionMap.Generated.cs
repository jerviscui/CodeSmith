//------------------------------------------------------------------------------
// <autogenerated>
//     此代码是由 CodeSmith 模板生成的。
//
//     做不该文件的修改内容。更改此
//     如果重新生成代码，文件将会丢失。
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using Abp.EntityFramework;
using CodeSmith.Abp.Template.Test.Core;

// ReSharper disable once CheckNamespace
namespace CodeSmith.Abp.Template.Test.EntityFramework
{
    public partial class WsoutburstpreventionMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Wsoutburstprevention>
    {
        public WsoutburstpreventionMap()
        {
            // table
            ToTable("wsoutburstprevention");

            // keys
            HasKey(t => t.Id);

            // Properties
            Property(t => t.Id)
                .HasColumnName("Id")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity)
                .IsRequired();
            Property(t => t.AddressName)
                .HasColumnName("AddressName")
                .HasMaxLength(765)
                .IsRequired();
            Property(t => t.MeasuringPoint)
                .HasColumnName("MeasuringPoint")
                .HasMaxLength(150)
                .IsRequired();
            Property(t => t.K1)
                .HasColumnName("K1")
                .IsOptional();
            Property(t => t.Smax)
                .HasColumnName("Smax")
                .IsOptional();
            Property(t => t.H2)
                .HasColumnName("H2")
                .IsOptional();
            Property(t => t.T2)
                .HasColumnName("T2")
                .HasMaxLength(150)
                .IsOptional();
            Property(t => t.Type)
                .HasColumnName("Type")
                .HasMaxLength(150)
                .IsOptional();
            Property(t => t.AllowFootage)
                .HasColumnName("AllowFootage")
                .IsRequired();
            Property(t => t.OverWhether)
                .HasColumnName("OverWhether")
                .IsRequired();
            Property(t => t.IsShow)
                .HasColumnName("IsShow")
                .IsRequired();
            Property(t => t.FaceSituation)
                .HasColumnName("FaceSituation")
                .HasMaxLength(150)
                .IsOptional();
            Property(t => t.ReasonAnalysis)
                .HasColumnName("ReasonAnalysis")
                .HasMaxLength(150)
                .IsOptional();
            Property(t => t.CreationTime)
                .HasColumnName("CreationTime")
                .IsRequired();
            Property(t => t.CollectionTime)
                .HasColumnName("CollectionTime")
                .IsRequired();
            Property(t => t.Hole)
                .HasColumnName("Hole")
                .HasMaxLength(150)
                .IsOptional();
            Property(t => t.OpenHole)
                .HasColumnName("OpenHole")
                .IsOptional();
            Property(t => t.FinalHole)
                .HasColumnName("FinalHole")
                .IsOptional();
            Property(t => t.Construction)
                .HasColumnName("Construction")
                .HasMaxLength(150)
                .IsOptional();
            Property(t => t.Recorder)
                .HasColumnName("Recorder")
                .HasMaxLength(150)
                .IsOptional();

            // Relationships

            InitializeMapping();
        }
    }
}
