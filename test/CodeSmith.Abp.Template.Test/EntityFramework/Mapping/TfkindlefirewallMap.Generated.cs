//------------------------------------------------------------------------------
// <autogenerated>
//     此代码是由 CodeSmith 模板生成的。
//
//     做不该文件的修改内容。更改此
//     如果重新生成代码，文件将会丢失。
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using Abp.EntityFramework;
using CodeSmith.Abp.Template.Test.Core;

// ReSharper disable once CheckNamespace
namespace CodeSmith.Abp.Template.Test.EntityFramework
{
    public partial class TfkindlefirewallMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Tfkindlefirewall>
    {
        public TfkindlefirewallMap()
        {
            // table
            ToTable("tfkindlefirewall");

            // keys
            HasKey(t => t.Id);

            // Properties
            Property(t => t.Id)
                .HasColumnName("Id")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity)
                .IsRequired();
            Property(t => t.EnclosedWallLedgerId)
                .HasColumnName("EnclosedWallLedgerId")
                .IsRequired();
            Property(t => t.GasConcentration)
                .HasColumnName("GasConcentration")
                .HasPrecision(18, 4)
                .IsRequired();
            Property(t => t.COConcentration)
                .HasColumnName("COConcentration")
                .HasPrecision(18, 4)
                .IsRequired();
            Property(t => t.CO2Concentration)
                .HasColumnName("CO2Concentration")
                .HasPrecision(18, 4)
                .IsOptional();
            Property(t => t.Temperature)
                .HasColumnName("Temperature")
                .HasPrecision(18, 4)
                .IsRequired();
            Property(t => t.O2Concentration)
                .HasColumnName("O2Concentration")
                .HasPrecision(18, 4)
                .IsRequired();
            Property(t => t.OutsideGasConcentration)
                .HasColumnName("OutsideGasConcentration")
                .HasPrecision(18, 4)
                .IsRequired();
            Property(t => t.OutsideCO2Concentration)
                .HasColumnName("OutsideCO2Concentration")
                .HasPrecision(18, 4)
                .IsOptional();
            Property(t => t.OutsideCOConcentration)
                .HasColumnName("OutsideCOConcentration")
                .HasPrecision(18, 4)
                .IsOptional();
            Property(t => t.OutsideTConcentration)
                .HasColumnName("OutsideTConcentration")
                .HasPrecision(18, 4)
                .IsOptional();
            Property(t => t.DifferentialPressure)
                .HasColumnName("DifferentialPressure")
                .HasPrecision(18, 4)
                .IsRequired();
            Property(t => t.WaterTemperature)
                .HasColumnName("WaterTemperature")
                .HasPrecision(18, 4)
                .IsRequired();
            Property(t => t.IsSensor)
                .HasColumnName("IsSensor")
                .IsRequired();
            Property(t => t.IsBeamTube)
                .HasColumnName("IsBeamTube")
                .IsRequired();
            Property(t => t.IsCOSensor)
                .HasColumnName("IsCOSensor")
                .IsRequired();
            Property(t => t.IsDrainage)
                .HasColumnName("IsDrainage")
                .IsRequired();
            Property(t => t.CreationTime)
                .HasColumnName("CreationTime")
                .IsRequired();
            Property(t => t.CollectionTime)
                .HasColumnName("CollectionTime")
                .IsRequired();
            Property(t => t.Remarks)
                .HasColumnName("Remarks")
                .HasMaxLength(765)
                .IsOptional();

            // Relationships
            HasRequired(t => t.EnclosedWallLedgerTfenclosedwallledger)
                .WithMany(t => t.EnclosedWallLedgerTfkindlefirewalls)
                .HasForeignKey(d => d.EnclosedWallLedgerId)
                .WillCascadeOnDelete(false);

            InitializeMapping();
        }
    }
}
