<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>
<%@ Assembly Name="SchemaExplorer" Path="../../../libs" %>
<%@ Assembly Name="CodeSmith.Abp"  Path="../../../libs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="CodeSmith.Abp" %>
<%@ Import Namespace="CodeSmith.Abp.Extensions" %>
<%@ Import Namespace="CodeSmith.Abp.Model" %>
<%@ Import Namespace="CodeSmith.Abp.Generator" %>

<%@ Property Name="ApplicationNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="PagedResultRequestClassName" Type="System.String"  Category="ClassName" Optional="False" %>

<%@ Property Name="Entity"Type="CodeSmith.Abp.Model.Entity" Category="Data" Optional="False" %>
<%@ Property Name="EnumItems"Type="System.Collections.Generic.List<EnumItem>" Category="Data" Optional="True" %>
<% EnumItems = EnumItems ?? new List<EnumItem>(); %>
//------------------------------------------------------------------------------
// <autogenerated>
//     此代码是由 CodeSmith 模板生成的。
//
//     做不该文件的修改内容。更改此
//     如果重新生成代码，文件将会丢失。
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Abp.Application.Services.Dto;
using Abp.Domain.Entities;
using Abp.Domain.Entities.Auditing;

namespace <%= ApplicationNamespace %>.<%= Entity.TableName.ToPluralPascalCase() %>.Dtos
{
    public partial class Get<%= Entity.ClassName.ToPluralPascalCase() %>PageInput : <%=PagedResultRequestClassName%>
    {
        
<% foreach(var p in Entity.Properties) { %>
        <% if(EnumItems.IsHaveEnum(Entity.ClassName,p.PropertyName)) {%>
        /// <summary>
        /// <%= p.Describe.ToReplaceLin() %>
        /// </summary>        
        public <%= EnumItems.GetEnumType(Entity.ClassName,p.PropertyName).Replace("?","") %>? <%= p.PropertyName.ToSafeName() %> { get; set; }
        <%}else{%>
        /// <summary>
        /// <%= p.Describe.ToReplaceLin() %>
        /// </summary>        
        public <%= p.SystemType.ToNullableType(true) %> <%= p.PropertyName.ToSafeName() %> { get; set; }
        <%} %>        
<% } // foreach %>
    }
}

