<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>
<%@ Assembly Name="SchemaExplorer" Path="../../../libs" %>
<%@ Assembly Name="CodeSmith.Abp"  Path="../../../libs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="CodeSmith.Abp" %>
<%@ Import Namespace="CodeSmith.Abp.Extensions" %>
<%@ Import Namespace="CodeSmith.Abp.Model" %>
<%@ Import Namespace="CodeSmith.Abp.Generator" %>

<%@ Property Name="ApplicationNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="AbpCoreNamespace" Type="System.String"  Category="Namespace" Optional="False" %>
<%@ Property Name="EntityContext" Type="CodeSmith.Abp.Model.EntityContext"  Category="Data" %>
using System;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using AutoMapper;

namespace <%=ApplicationNamespace%>
{
    internal static partial class DtoMappings
    {
        public static void Map()
        {
            //I specified mapping for AssignedPersonId since NHibernate does not fill Task.AssignedPersonId
            //If you will just use EF, then you can remove ForMember definition.
<% foreach(var entity in EntityContext.Entities){%>
            Mapper.CreateMap<<%=AbpCoreNamespace%>.<%= entity.ClassName.ToPluralPascalCase() %>.<%= entity.ClassName %>, <%=ApplicationNamespace%>.<%= entity.ClassName.ToPluralPascalCase() %>.Dtos.<%= entity.ClassName %>Dto>();
            Mapper.CreateMap<<%=ApplicationNamespace%>.<%= entity.ClassName.ToPluralPascalCase() %>.Dtos.<%= entity.ClassName %>Dto, <%=AbpCoreNamespace%>.<%= entity.ClassName.ToPluralPascalCase() %>.<%= entity.ClassName %>>();
<%}%>
            
            InitializeMapping();
        }
    }
}